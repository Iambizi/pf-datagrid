import Head from "next/head";
import Link from "next/link";
import styles from "../styles/Home.module.css";
import { Heading, Center, Box, Text } from "@chakra-ui/react";
import ColorModeButton from "../components/common/ColorMode";

export default function Home() {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.description}>
          <ColorModeButton />
        </div>
        <Box
          display="flex"
          justifyContent="center"
          flexDirection="column"
          mt={8}
          w="40vw"
        >
          <Center>
            <Heading as="h1" size="2xl" mb={6}>
              Data Grid Research
            </Heading>
          </Center>
          <Text size="lg" mb={3}>
            <span className={styles.lineHead}>Context:</span> We need to find a
            replacement for our current Material UI data Grids <br />
            The main limitation we are experiencing is an inability to
            virtualize long lists.
            <br /> (Capped at 100)
          </Text>
          <Text mb="3">
            <span className={`${styles.lineHead} ${styles.underline}`}>
              Proposed Solution:
            </span>
            <span>
              <a
                href="https://www.material-react-table.com/"
                target="_blank"
                rel="noreferrer"
                className={styles.underline}
              >
                {" "}
                Material-react-table
              </a>
            </span>
            <ul>
            <li className={styles.list}>
                - is built with the popular Material-UI
                framework, which provides a consistent, modern look and feel.
              </li>
              <li className={styles.list}>
                - Offers more options for customizing the appearance of our
                tables
              </li>
              <li className={styles.list}>
                - Allows <b>memoization</b>: has optional props that will allow
                you to either memoize table cells, table rows, or the entire
                table body in order to improve render performance on large
                tables.
              </li>
              <li className={styles.list}>
                - Offers a wide range of customization
                options, such as the ability to change the colors of various
                elements or to rotate the table.
              </li>
              <li className={styles.list}>
                - Provides built-in support for sorting,
                filtering, and searching.
              </li>
              <li className={styles.list}>
                - API is
                easy to use.
              </li>
              <li className={styles.list}>
                - Is lightweight and
                performance-optimized.
              </li>
              <li className={styles.list}>
                - Has good documentation and a large,
                active community of users.
              </li>
              <li className={styles.list}>
                - Is regularly updated and maintained.
              </li>
              <li className={styles.list}>
                - Has a clean, modern codebase that is
                easy to extend and modify.
              </li>
            </ul>
          </Text>
          <span className={styles.lineHead}>
            Feautures: <br />
          </span>
          <ul>
            <li className={styles.list}>
              -{" "}
              <span className={`${styles.lineHead} ${styles.underline}`}>
                <Link href="/multiSelection">
                  Multi Selection (+ cellHighlight)
                </Link>
              </span>
            </li>
            <li className={styles.list}>
              -{" "}
              <span className={`${styles.lineHead} ${styles.underline}`}>
                <Link href="/virtualization">Table Virtualization</Link>
              </span>
            </li>
            <li className={styles.list}>
              -{" "}
              <span className={`${styles.lineHead} ${styles.underline}`}>
                <Link href="/rotateGrid">Transpose Grid</Link>
              </span>
            </li>
            <li className={styles.list}>
              -{" "}
              <span className={`${styles.lineHead} ${styles.underline}`}>
                <Link href="/gridCheckBox">Grid with checkboxes</Link>
              </span>
            </li>
            <li className={styles.list}>
              -{" "}
              <span className={`${styles.lineHead} ${styles.underline}`}>
                <Link href="/editGrid">
                  Editable Grid ( Add/remove, re-order columns, Add button in
                  header)
                </Link>
              </span>
            </li>
            <li className={styles.list}>
              -{" "}
              <span className={`${styles.lineHead} ${styles.underline}`}>
                <Link href="/drillDown">Drill down option within grid</Link>
              </span>
            </li>
          </ul>
          <br />
        </Box>
      </main>
    </>
  );
}
